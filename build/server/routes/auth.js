// Generated by CoffeeScript 1.7.1
(function() {
  var crypto, request,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  request = require('request');

  crypto = require('crypto');

  module.exports = function(_arg) {
    var config, log;
    config = _arg.config, log = _arg.log;
    return {
      '/auth': {
        post: function() {
          return request.post({
            'url': config.browserid.provider,
            'form': {
              'assertion': this.req.body.assertion,
              'audience': "http://" + this.req.headers.host
            }
          }, (function(_this) {
            return function(error, response, body) {
              var _ref;
              if (error) {
                throw error;
              }
              body = JSON.parse(body);
              if (body.status === 'okay') {
                if (_ref = body.email, __indexOf.call(config.browserid.users, _ref) >= 0) {
                  log.info("Identity verified for " + body.email);
                  _this.res.writeHead(200, 'application/json');
                  _this.res.write(JSON.stringify({
                    'email': body.email,
                    'key': crypto.createHash('md5').update(body.email + config.browserid.salt).digest('hex')
                  }));
                } else {
                  log.warn("" + body.email + " tried to access the API");
                  _this.res.writeHead(403, 'application/json');
                  _this.res.write(JSON.stringify({
                    'message': "Your email " + body.email + " is not authorized to access the admin backend"
                  }));
                }
              } else {
                log.error(body.message);
                _this.res.writeHead(403, 'application/json');
                _this.res.write(JSON.stringify(body));
              }
              return _this.res.end();
            };
          })(this));
        }
      }
    };
  };

}).call(this);
